	.syntax unified
	.text
	.global main
main:
	ldr		r0,=STRG	// Load address of STRG
	ldr		r1,=PACK	// Load address of PACK

loop:
	mov		r7,#7			// Intialize r7 to 7 to prep for decrementing
	ldrb	r1,[r1]			// Load next BCD from PACK
	ldrb	r0,[r0,r7]		// Load least significant digit str location
	and		r3,r1,#0x0F		// Extract ones digit
	add		r3,#48			// Convert ones digit to ascii
	strb	r3,[r0]			// Store ascii digit in STRG
	and		r2,r1,0xF0		// Extract tens digit
	mov		r2,r2,lsr #4	// Shift right to get value of tens digit in r2
	add		r2,#48			// Convert tens digit to ascii equivalant
	strb	r2,[r0]			// Store ascii digit into STRG
	sub		r0,#1			// Decrement r0 to next storage byte
	sub		r0,#1			// Decrement r0 to next storage byte
	cmp		r0,#0			// Compare r0 to 0
	beq		end				// End program if equal to 0
	add		r1,#4			// Increment r1 to next BCD
	b		loop			// Repeat loop

end:
	b		.				// Branch here



		.data
STRG:	.byte	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
PACK:	.word	0x13587609
		.end

